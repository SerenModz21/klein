<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Klein</title>
</head>

<body>
    <div>
        <h1>Klein {{ version }}</h1>
        <input type="url" placeholder="Your url here..." name="url" id="url"><br>
        <button onclick="shortenUrl();">Shorten</button>
    </div>

    <div>
        <ul>
            {{#each urls}}
            <li>
                <a href="http://localhost:8080/{{ . }}" target="_blank">{{ . }}</a>
            </li>
            {{/each}}
        </ul>
    </div>
</body>
<style>
    @import url('https://fonts.googleapis.com/css2?family=Signika:wght@300&family=Source+Sans+Pro&display=swap');

    :root {
        --background: #000000;
        --foreground: #ddbebe;
        --cursor: #ddbebe;
        --header: #C16A7F;

        --color0: #000000;
        --color1: #A05B6A;
        --color3: #A48B79;
        --color4: #BD7780;
        --color5: #CC7588;
        --color6: #BBA58B;
        --color7: #ddbebe;
        --color8: #9a8585;
        --color9: #A05B6A;
        --color10: #C16A7F;
        --color11: #A48B79;
        --color12: #BD7780;
        --color13: #CC7588;
        --color14: #BBA58B;
        --color15: #ddbebe;
    }

    html,
    body {
        height: 100%;
    }

    body {
        background: var(--background);
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    input {
        position: relative;
        height: 20px;
        overflow: hidden;
        text-align: center;
        appearance: none;
        overflow: hidden;
        color: transparent;
        outline: none;
    }

    button {
        cursor: pointer;
        border-radius: 5px;
        width: 100%;
        height: 30px;
        margin-top: 5px;
        transition: 0.2s;
    }

    button:hover {
        filter: brightness(50%);
    }

    button,
    input {
        border-radius: 5px;
        background: var(--background);
        color: var(--foreground);
        border: 1.5px solid var(--cursor);
        font-family: 'Signika', sans-serif;
    }

    ul {
        font-family: 'Signika', sans-serif;
        list-style: none;
    }

    a {
        color: var(--foreground);
    }

    h1 {
        font-family: 'Source Sans Pro', sans-serif;
        color: var(--header);
    }

    #snackbar {
        font-family: 'Signika', sans-serif;
        color: var(--foreground);
        visibility: hidden;
        min-width: 250px;
        filter: opacity(50%);
        background-color: var(--background);
        text-align: center;
        border-radius: 2px;
        position: fixed;
        z-index: 1;
        bottom: 30px;
    }

    #snackbar.show {
        visibility: visible;
        -webkit-animation: fadein 0.5s, fadeout 0.5s 9.5s;
        animation: fadein 0.5s, fadeout 0.5s 9.5s;
    }

    @-webkit-keyframes fadein {
        from {
            bottom: 0;
            opacity: 0;
        }

        to {
            bottom: 30px;
            opacity: 1;
        }
    }

    @keyframes fadein {
        from {
            bottom: 0;
            opacity: 0;
        }

        to {
            bottom: 30px;
            opacity: 1;
        }
    }

    @-webkit-keyframes fadeout {
        from {
            bottom: 30px;
            opacity: 1;
        }

        to {
            bottom: 0;
            opacity: 0;
        }
    }

    @keyframes fadeout {
        from {
            bottom: 30px;
            opacity: 1;
        }

        to {
            bottom: 0;
            opacity: 0;
        }
    }
</style>
<script>
    const shortenUrl = async () => {
        let toast = document.createElement('div');
        toast.id = 'snackbar';

        document.body.appendChild(toast);
        toast = document.getElementById('snackbar');

        const response = await (await fetch(`/api/v1/shorten?url=${document.getElementById('url').value}`, { method: 'POST' })).json();
        console.log(response);

        toast.innerText = response.message;
        toast.classList.add('show');

        setTimeout(() => {
            toast.className = toast.classList.remove('show');
            toast.remove();
        }, 10000);
    }
</script>

</html>